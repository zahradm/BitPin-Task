###########
# BUILDER #
###########

# Use an official Python runtime as the base image
FROM python:3.11.4-slim-buster as builder

# Set the working directory
WORKDIR /usr/src/app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy application dependencies
COPY ./app/requirements.lock /usr/src/app/

# Install Python dependencies and build wheels
RUN pip install --upgrade pip && \
    pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.lock


#########
# FINAL #
#########

# Use a minimal Python image as the base for the final image
FROM python:3.11.4-slim-buster

# Create a directory for the application
WORKDIR /usr/src/app

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends netcat && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy the wheels and requirements file from the builder stage
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.lock .

# Install Python dependencies from the pre-built wheels
RUN pip install --no-cache-dir /wheels/*

# Copy the application code
COPY ./app /usr/src/app/

# Set permissions for a secure production environment
RUN addgroup --system app && adduser --system --group app && \
    chown -R app:app /usr/src/app

# Switch to the non-root user
USER app

# Ensure the entrypoint script is executable
RUN chmod +x /usr/src/app/entrypoint.prod.sh

# Run the entrypoint script
ENTRYPOINT ["/usr/src/app/entrypoint.prod.sh"]
